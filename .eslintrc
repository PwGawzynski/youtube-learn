{
  // Configuration for JavaScript files
  "extends": ["airbnb-base", "plugin:prettier/recommended"],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      },
      "alias": {
        "map": [
          ["@", "./src"],
        ],
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".d.ts"]
      }
    }
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ],
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/no-throw-literal": "off"
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort",
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb",
        "airbnb-typescript",
        "airbnb/hooks",
        "plugin:react/jsx-runtime",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ],
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "": "never"
          }
        ], // Avoid missing file extension errors when using '@/' alias
        "react/function-component-definition": "off", // Disable Airbnb's specific function type
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "no-restricted-syntax": [
          "error",
          "ForInStatement",
          "LabeledStatement",
          "WithStatement"
        ], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ],
        "@typescript-eslint/lines-between-class-members": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "import/no-extraneous-dependencies":"off",
        "import/no-restricted-paths": [
          "error",
          {
            "zones": [
              // REMEMBER TO UPDATE THIS WHEN ADDING NEW FEATURES
              {
                "target": "./src/features/feed",
                "from": "./src/features",
                "except": ["./feed"]
              },
              {
                "target": "./src/features/categorized-list",
                "from": "./src/features",
                "except": ["./categorized-list"]
              },
              {
                "target": "./src/features/search",
                "from": "./src/features",
                "except": ["./search"]
              },
              {
                "target": "./src/features/search-and-settings-header",
                "from": "./src/features",
                "except": ["./search-and-settings-header"]
              },
              // UNIDIRECTIONAL IMPORTS
              {
                "target": "./src/features",
                "from": "./src/app"
              },
              {
                "target": [
                    "./src/components",
                    "./src/core/types",
                    "./src/core/hooks",
                    "./src/core/state",
                    "./src/core/utils",
                    "./src/core/settings",
                    "./src/core/api"
                ],
                "from": ["./src/features", "./src/app"]
              },
            ]
          }
        ]
      }
    },
    // Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["jest", "jest-formatting", "testing-library"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react"
      ]
    },
    // Configuration for e2e testing
    {
      "files": ["e2e/**/*.ts"],
      "plugins": ["jest", "jest-formatting", "detox"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended"
      ],
      "parserOptions": {
        "project": "./e2e/tsconfig.json"
      },
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ]
}
